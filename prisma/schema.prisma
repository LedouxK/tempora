// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  password      String
  role          Role      @default(EMPLOYEE)
  department    String?
  position      String?
  hireDate      DateTime?
  phone         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  timeEntries   TimeEntry[]
  expenses      Expense[]
  events        Event[]
  leaveRequests LeaveRequest[]
}

enum Role {
  ADMIN
  MANAGER
  EMPLOYEE
}

model TimeEntry {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  date        DateTime
  startTime   DateTime?
  endTime     DateTime?
  hours       Float
  type        TimeType
  description String?
  status      Status   @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum TimeType {
  WORK
  OVERTIME
  REMOTE
  TRAINING
  SICK
  VACATION
}

model Expense {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  amount      Float
  date        DateTime
  category    String
  description String
  receipt     String?
  status      Status   @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Event {
  id          String   @id @default(uuid())
  title       String
  description String?
  startTime   DateTime
  endTime     DateTime
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model LeaveRequest {
  id          String     @id @default(uuid())
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  startDate   DateTime
  endDate     DateTime
  type        LeaveType
  reason      String?
  status      Status     @default(PENDING)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

enum LeaveType {
  VACATION
  SICK
  PERSONAL
  PARENTAL
  OTHER
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}